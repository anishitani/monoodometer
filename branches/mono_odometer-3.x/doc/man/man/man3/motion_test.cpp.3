.TH "src/motion_test.cpp" 3 "Wed Jul 3 2013" "Version 3.0" "Mono Odometer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/motion_test.cpp \- 
.SH SYNOPSIS
.br
.PP
\fC#include <core\&.h>\fP
.br
\fC#include <cv_bridge/cv_bridge\&.h>\fP
.br
\fC#include <opencv2/calib3d/calib3d\&.hpp>\fP
.br
\fC#include <opencv2/highgui/highgui\&.hpp>\fP
.br
\fC#include <opencv2/imgproc/imgproc\&.hpp>\fP
.br
\fC#include <opencv2/features2d/features2d\&.hpp>\fP
.br
\fC#include <opencv2/nonfree/nonfree\&.hpp>\fP
.br
\fC#include <tf/transform_broadcaster\&.h>\fP
.br
\fC#include <tf/transform_listener\&.h>\fP
.br
\fC#include <nav_msgs/Odometry\&.h>\fP
.br
\fC#include <iostream>\fP
.br
\fC#include <cstdio>\fP
.br
\fC#include <list>\fP
.br
\fC#include <vector>\fP
.br
\fC#include <fstream>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "double \fBrad2deg\fP (double rad)"
.br
.ti -1c
.RI "void \fBcompare\fP (vector< Point2d > train_pts, vector< Point2d > query_pts, vector< DMatch > matches, const vector< KeyPoint > &train_kpts, const vector< KeyPoint > &query_kpts)"
.br
.ti -1c
.RI "void \fBdrawMatchesRelative\fP (const vector< KeyPoint > &train, const vector< KeyPoint > &query, std::vector< cv::DMatch > &matches, Mat &img, const vector< char > &mask=vector< char >())"
.br
.ti -1c
.RI "void \fBdrawMatchesRelative\fP (const vector< Point2d > train, const vector< Point2d > query, Mat input, Mat &output, const vector< char > &mask=vector< char >())"
.br
.ti -1c
.RI "void \fBkeypoints2points\fP (const vector< KeyPoint > &in, vector< Point2d > &out)"
.br
.ti -1c
.RI "void \fBpoints2keypoints\fP (const vector< Point2d > &in, vector< KeyPoint > &out)"
.br
.ti -1c
.RI "void \fBwarpKeypoints\fP (const Mat &H, const vector< KeyPoint > &in, vector< KeyPoint > &out)"
.br
.ti -1c
.RI "void \fBmatches2points\fP (const vector< KeyPoint > &train, const vector< KeyPoint > &query, const std::vector< cv::DMatch > &matches, vector< cv::Point2d > &pts_train, vector< Point2d > &pts_query)"
.br
.ti -1c
.RI "bool \fBfeature_point_normalization\fP (std::vector< cv::Point2d > prev_pts, std::vector< cv::Point2d > curr_pts, std::vector< cv::Point2d > &norm_prev_pts, std::vector< cv::Point2d > &norm_curr_pts, cv::Mat &Tp, cv::Mat &Tc)"
.br
.ti -1c
.RI "cv::Mat \fBcompute_F_matrix\fP (std::vector< cv::Point2d > train_pts, std::vector< cv::Point2d > query_pts, Mat &mask)"
.br
.ti -1c
.RI "vector< cv::Mat > \fBcompute_Rt\fP (cv::Mat E, cv::Mat K)"
.br
.ti -1c
.RI "int \fBtriangulateCheck\fP (vector< Point2d > train_pts, vector< Point2d > query_pts, Mat &K, Mat P, vector< char > mask=vector< char >())"
.br
.ti -1c
.RI "void \fBestimate_motion\fP (vector< Point2d > train_pts, vector< Point2d > query_pts, vector< DMatch > matches, Mat K, Mat &P, vector< char > &inlier_mask)"
.br
.ti -1c
.RI "void \fBresetH\fP (Mat &H)"
.br
.ti -1c
.RI "int \fBmain\fP (int argc, char **argv)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void \fBcompare\fP (vector< Point2d >train_pts, vector< Point2d >query_pts, vector< DMatch >matches, const vector< KeyPoint > &train_kpts, const vector< KeyPoint > &query_kpts)"
.SS "cv::Mat \fBcompute_F_matrix\fP (std::vector< cv::Point2d >train_pts, std::vector< cv::Point2d >query_pts, Mat &mask)"
.SS "vector<cv::Mat> \fBcompute_Rt\fP (cv::MatE, cv::MatK)"
.SS "void \fBdrawMatchesRelative\fP (const vector< KeyPoint > &train, const vector< KeyPoint > &query, std::vector< cv::DMatch > &matches, Mat &img, const vector< char > &mask = \fCvector<char>()\fP)"
.SS "void \fBdrawMatchesRelative\fP (const vector< Point2d >train, const vector< Point2d >query, Matinput, Mat &output, const vector< char > &mask = \fCvector<char>()\fP)"
.SS "void \fBestimate_motion\fP (vector< Point2d >train_pts, vector< Point2d >query_pts, vector< DMatch >matches, MatK, Mat &P, vector< char > &inlier_mask)"
.SS "bool \fBfeature_point_normalization\fP (std::vector< cv::Point2d >prev_pts, std::vector< cv::Point2d >curr_pts, std::vector< cv::Point2d > &norm_prev_pts, std::vector< cv::Point2d > &norm_curr_pts, cv::Mat &Tp, cv::Mat &Tc)"
.SS "void \fBkeypoints2points\fP (const vector< KeyPoint > &in, vector< Point2d > &out)"
.SS "int \fBmain\fP (intargc, char **argv)"\fBmain()\fP < Image publisher
.PP
< Image publisher
.PP
< Image publisher
.PP
Feature and Descriptor
.PP
Images
.PP
Calibration Matrix
.PP
Motion Structures
.PP
Leitura da Image
.PP
Calcula as correspondencias proximas 
.SS "void \fBmatches2points\fP (const vector< KeyPoint > &train, const vector< KeyPoint > &query, const std::vector< cv::DMatch > &matches, vector< cv::Point2d > &pts_train, vector< Point2d > &pts_query)"
.SS "void \fBpoints2keypoints\fP (const vector< Point2d > &in, vector< KeyPoint > &out)"
.SS "double \fBrad2deg\fP (doublerad)"
.SS "void \fBresetH\fP (Mat &H)"
.SS "int \fBtriangulateCheck\fP (vector< Point2d >train_pts, vector< Point2d >query_pts, Mat &K, MatP, vector< char >mask = \fCvector<char>()\fP)"Checa a profundidade 
.SS "void \fBwarpKeypoints\fP (const Mat &H, const vector< KeyPoint > &in, vector< KeyPoint > &out)"
.SH "Author"
.PP 
Generated automatically by Doxygen for Mono Odometer from the source code\&.
